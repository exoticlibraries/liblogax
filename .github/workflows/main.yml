
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  exotic-regression:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        platform: [x86, x64]
        compiler: [gcc, clang, tcc]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup Exotic Libraries And Run Regression
        uses: exoticlibraries/exotic-action@v1.4
        with:
          download-exotic-libraries: true
          run-regression: true
          test-folder-recursive: true
          selected-exotic-libraries: |
            libcester
          test-folders: |
            test/
          test-exclude-file-pattern: |
            crash_test.c
          compiler-options-for-tests: |
            -I. -I../include -I../../include -I../../../include -I./include
          regression-cli-options: |
            --cester-printversion
            
  execute-cmake-regression:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        platform: [x64]
        compiler: [gcc]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup Exotic Libraries
        uses: exoticlibraries/exotic-action@v1.4
        with:
          download-exotic-libraries: true
          run-regression: false
          selected-exotic-libraries: |
            libcester
        
      - name: Download Dependencies
        run: |
          sudo apt-get purge --auto-remove cmake
          sudo mkdir /opt/cmake
          sudo wget https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2-Linux-x86_64.sh
          sudo sh cmake-3.17.2-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
        
      - name: Run Cmake Regression
        run: |
          cd ./test/
          /opt/cmake/bin/cmake CMakeLists.txt -G"Unix Makefiles"
          make
            
  build-and-deploy-gh_pages:
    runs-on: ubuntu-latest
    needs: exotic-regression
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Install and Build üîß
        run: |
          sudo apt-get upgrade && sudo apt-get update && sudo apt-get clean 
          sudo apt-get install -y python3 python3-setuptools python3-pip python3-sphinx
          python3 -m pip install --upgrade pip
          python3 -m pip install themata m2r2
          pip install themata m2r2
          sudo apt-get install -y clang doxygen make
          cd ./docs/
          rm -Rf build/
          sphinx-build -b html -d build/doctrees  ./ build/html
          doxygen
          touch ./build/html/.nojekyll
          cd ../

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_FOR_CI_CD }}
          BRANCH: gh-pages 
          FOLDER: docs/build/html
          CLEAN: true
            
        
